[{"content":"ゴールデンウィーク中にネットワークの構成を変更したので記録しておく\nネットワーク構成図  だいたいこんな感じ 線が2本とか3本とかになっているところは物理的には1本のLANケーブルで接続している  NVR510 の設定  VLAN + IPoE + PPPoE + ひかり電話 な設定 VLAN でセグメントを分けつつ、IPoE トンネルと PPPoE をそれぞれ別のセグメントで接続しつつ、ひかり電話を設定する  # # GATEWAY #  # NTP で時刻設定できるように、NVR510 自身を tunnel 1 にて接続できるようにする # https://do-gugan.com/~furuta/archives/2016/03/rtxnvrwan.html  ip route default gateway tunnel 1 filter 500001 500010 gateway pp 1 filter 500030 ipv6 route default gateway dhcp onu1  ip filter 500000 restrict * * * * * ip filter 500001 pass 0.0.0.0 * * * * ip filter 500010 pass 192.168.11.0/24 * * * * ip filter 500020 pass 192.168.21.0/24 * * * * ip filter 500030 pass 192.168.31.0/24 * * * *  # # ONU #  ip onu1 address dhcp ipv6 onu1 address dhcp ipv6 onu1 secure filter in 102000 102001 102002 102003 ipv6 onu1 secure filter out 102099 dynamic 102080 102081 102082 102083 102084 102085 102098 102099 ipv6 onu1 dhcp service client ngn type onu1 ntt  ipv6 filter 102000 pass * * icmp6 * * ipv6 filter 102001 pass * * tcp * ident ipv6 filter 102002 pass * * udp * 546 ipv6 filter 102003 pass * * 4 ipv6 filter 102099 pass * * * * *  ipv6 filter dynamic 102080 * * ftp ipv6 filter dynamic 102081 * * domain ipv6 filter dynamic 102082 * * www ipv6 filter dynamic 102083 * * smtp ipv6 filter dynamic 102084 * * pop3 ipv6 filter dynamic 102085 * * submission ipv6 filter dynamic 102098 * * tcp ipv6 filter dynamic 102099 * * udp  # # LAN #  # https://mimumimu.net/blog/2014/08/11/どうも-ra-は-64-限定らしい。-2/ # https://network.yamaha.com/setting/wireless_lan/airlink/multi_ssid_wlx_rtx  ip lan1 address 192.168.11.1/24 ip lan1 secure filter in 600010 600011 600099 ipv6 prefix 10 dhcp-prefix@onu1:1100::/64 ipv6 lan1 address dhcp-prefix@onu1:1100::1/64 ipv6 lan1 rtadv send 10 o_flag=on ipv6 lan1 dhcp service server  # それぞれのセグメントに自由にアクセスできないようにする  ip filter 600010 reject 192.168.11.0/24 192.168.21.0/24 ip filter 600011 reject 192.168.11.0/24 192.168.31.0/24 ip filter 600020 reject 192.168.21.0/24 192.168.11.0/24 ip filter 600021 reject 192.168.21.0/24 192.168.31.0/24 ip filter 600030 reject 192.168.31.0/24 192.168.11.0/24 ip filter 600031 reject 192.168.31.0/24 192.168.21.0/24 ip filter 600099 pass * *  # # VLAN #  vlan lan1/1 802.1q vid=20 name=SAN ip lan1/1 address 192.168.21.1/24 ip lan1/1 secure filter in 600020 600021 600099  # 192.168.21.1/24 は IPv6 を設定する必要はない  #ipv6 prefix 20 dhcp-prefix@onu1:2100::/64 #ipv6 lan1/1 address dhcp-prefix@onu1:2100::1/64 #ipv6 lan1/1 rtadv send 20 o_flag=on #ipv6 lan1/1 dhcp service server  vlan lan1/2 802.1q vid=30 name=PPPoE ip lan1/2 address 192.168.31.1/24 ip lan1/2 secure filter in 600030 600031 600099 ipv6 prefix 30 dhcp-prefix@onu1:3100::/64 ipv6 lan1/2 address dhcp-prefix@onu1:3100::1/64 ipv6 lan1/2 rtadv send 30 o_flag=on ipv6 lan1/2 dhcp service server  # # PP #  pp disable all pp select 1  pp keepalive interval 30 retry-interval=30 count=12  pp always-on on  pppoe use onu1  pppoe auto disconnect off  pp auth accept pap chap  pp auth myname username password  ppp lcp mru on 1454  ppp ipcp ipaddress on  ppp ipcp msext on  ppp ccp type none  ip pp secure filter in 200005 200020 200021 200022 200023 200024 200025 200050 200052 203103 203104 203105 203106  ip pp secure filter out 200015 200020 200021 200022 200023 200024 200025 200026 200027 200099 dynamic 200080 200081 200082 200083 200084 200085 200098 200099  ip pp nat descriptor 1000  pp enable 1  ip filter 200000 reject 10.0.0.0/8 * * * * ip filter 200001 reject 172.16.0.0/12 * * * * ip filter 200002 reject 192.168.0.0/16 * * * * ip filter 200003 reject 192.168.11.0/24 * * * * ip filter 200004 reject 192.168.21.0/24 * * * * ip filter 200005 reject 192.168.31.0/24 * * * * ip filter 200010 reject * 10.0.0.0/8 * * * ip filter 200011 reject * 172.16.0.0/12 * * * ip filter 200012 reject * 192.168.0.0/16 * * * ip filter 200013 reject * 192.168.11.0/24 * * * ip filter 200014 reject * 192.168.21.0/24 * * * ip filter 200015 reject * 192.168.31.0/24 * * * ip filter 200020 reject * * udp,tcp 135 * ip filter 200021 reject * * udp,tcp * 135 ip filter 200022 reject * * udp,tcp netbios_ns-netbios_ssn * ip filter 200023 reject * * udp,tcp * netbios_ns-netbios_ssn ip filter 200024 reject * * udp,tcp 445 * ip filter 200025 reject * * udp,tcp * 445 ip filter 200026 restrict * * tcpfin * www,21,nntp ip filter 200027 restrict * * tcprst * www,21,nntp ip filter 200030 pass * 192.168.11.0/24 icmp * * ip filter 200031 pass * 192.168.11.0/24 established * * ip filter 200032 pass * 192.168.11.0/24 tcp * ident ip filter 200033 pass * 192.168.11.0/24 tcp ftpdata * ip filter 200034 pass * 192.168.11.0/24 tcp,udp * domain ip filter 200035 pass * 192.168.11.0/24 udp domain * ip filter 200036 pass * 192.168.11.0/24 udp * ntp ip filter 200037 pass * 192.168.11.0/24 udp ntp * ip filter 200040 pass * 192.168.21.0/24 icmp * * ip filter 200041 pass * 192.168.21.0/24 established * * ip filter 200042 pass * 192.168.21.0/24 tcp * ident ip filter 200043 pass * 192.168.21.0/24 tcp ftpdata * ip filter 200044 pass * 192.168.21.0/24 tcp,udp * domain ip filter 200045 pass * 192.168.21.0/24 udp domain * ip filter 200046 pass * 192.168.21.0/24 udp * ntp ip filter 200047 pass * 192.168.21.0/24 udp ntp * ip filter 200050 pass * 192.168.31.0/24 icmp * * ip filter 200051 pass * 192.168.31.0/24 established * * ip filter 200052 pass * 192.168.31.0/24 tcp * ident ip filter 200053 pass * 192.168.31.0/24 tcp ftpdata * ip filter 200054 pass * 192.168.31.0/24 tcp,udp * domain ip filter 200055 pass * 192.168.31.0/24 udp domain * ip filter 200056 pass * 192.168.31.0/24 udp * ntp ip filter 200057 pass * 192.168.31.0/24 udp ntp * ip filter 200099 pass * * * * * ip filter 201100 pass * 192.168.11.1 tcp * 5060 ip filter 201101 pass * 192.168.11.1 udp * 5060 ip filter 201102 pass * 192.168.11.1 udp * 5004-5035 ip filter 202100 pass * 192.168.21.1 tcp * 5060 ip filter 202101 pass * 192.168.21.1 udp * 5060 ip filter 202102 pass * 192.168.21.1 udp * 5004-5035 ip filter 203100 pass * 192.168.31.1 tcp * 5060 ip filter 203101 pass * 192.168.31.1 udp * 5060 ip filter 203102 pass * 192.168.31.1 udp * 5004-5035 ip filter 203103 pass * 192.168.31.30 tcp * www ip filter 203104 pass * 192.168.31.30 udp * www ip filter 203105 pass * 192.168.31.30 tcp * https ip filter 203106 pass * 192.168.31.30 udp * https  ip filter dynamic 200080 * * ftp ip filter dynamic 200081 * * domain ip filter dynamic 200082 * * www ip filter dynamic 200083 * * smtp ip filter dynamic 200084 * * pop3 ip filter dynamic 200085 * * submission ip filter dynamic 200098 * * tcp ip filter dynamic 200099 * * udp  nat descriptor type 1000 masquerade  # 80, 443 ポートを開く  nat descriptor masquerade static 1000 1 192.168.31.30 tcp www nat descriptor masquerade static 1000 2 192.168.31.30 udp www nat descriptor masquerade static 1000 3 192.168.31.30 tcp https nat descriptor masquerade static 1000 4 192.168.31.30 udp https  # http://www.rtpro.yamaha.co.jp/RT60w/VoIP/voipconf.html # この辺は使わないのでコメントアウトする  #nat descriptor masquerade static 1000 11 192.168.11.1 tcp 5060 #nat descriptor masquerade static 1000 12 192.168.11.1 udp 5060 #nat descriptor masquerade static 1000 13 192.168.11.1 udp 5004-5035 #nat descriptor masquerade static 1000 21 192.168.21.1 tcp 5060 #nat descriptor masquerade static 1000 22 192.168.21.1 udp 5060 #nat descriptor masquerade static 1000 23 192.168.21.1 udp 5004-5035 #nat descriptor masquerade static 1000 31 192.168.31.1 tcp 5060 #nat descriptor masquerade static 1000 32 192.168.31.1 udp 5060 #nat descriptor masquerade static 1000 33 192.168.31.1 udp 5004-5035  # # TUNNEL #  no tunnel enable all tunnel select 1  tunnel encapsulation map-e  tunnel map-e type ocn  ip tunnel mtu 1460  ip tunnel secure filter in 400003 400004 400005 400020 400021 400022 400023 400024 400025 400030 400032 400040 400042 400050 400052  ip tunnel secure filter out 400013 400014 400015 400020 400021 400022 400023 400024 400025 400026 400027 400099 dynamic 400080 400081 400082 400083 400084 400085 400098 400099  ip tunnel nat descriptor 20000  tunnel enable 1  ip filter 400000 reject 10.0.0.0/8 * * * * ip filter 400001 reject 172.16.0.0/12 * * * * ip filter 400002 reject 192.168.0.0/16 * * * * ip filter 400003 reject 192.168.11.0/24 * * * * ip filter 400004 reject 192.168.21.0/24 * * * * ip filter 400005 reject 192.168.31.0/24 * * * * ip filter 400010 reject * 10.0.0.0/8 * * * ip filter 400011 reject * 172.16.0.0/12 * * * ip filter 400012 reject * 192.168.0.0/16 * * * ip filter 400013 reject * 192.168.11.0/24 * * * ip filter 400014 reject * 192.168.21.0/24 * * * ip filter 400015 reject * 192.168.31.0/24 * * * ip filter 400020 reject * * udp,tcp 135 * ip filter 400021 reject * * udp,tcp * 135 ip filter 400022 reject * * udp,tcp netbios_ns-netbios_ssn * ip filter 400023 reject * * udp,tcp * netbios_ns-netbios_ssn ip filter 400024 reject * * udp,tcp 445 * ip filter 400025 reject * * udp,tcp * 445 ip filter 400026 restrict * * tcpfin * www,21,nntp ip filter 400027 restrict * * tcprst * www,21,nntp ip filter 400030 pass * 192.168.11.0/24 icmp * * ip filter 400031 pass * 192.168.11.0/24 established * * ip filter 400032 pass * 192.168.11.0/24 tcp * ident ip filter 400033 pass * 192.168.11.0/24 tcp ftpdata * ip filter 400034 pass * 192.168.11.0/24 tcp,udp * domain ip filter 400035 pass * 192.168.11.0/24 udp domain * ip filter 400036 pass * 192.168.11.0/24 udp * ntp ip filter 400037 pass * 192.168.11.0/24 udp ntp * ip filter 400040 pass * 192.168.21.0/24 icmp * * ip filter 400041 pass * 192.168.21.0/24 established * * ip filter 400042 pass * 192.168.21.0/24 tcp * ident ip filter 400043 pass * 192.168.21.0/24 tcp ftpdata * ip filter 400044 pass * 192.168.21.0/24 tcp,udp * domain ip filter 400045 pass * 192.168.21.0/24 udp domain * ip filter 400046 pass * 192.168.21.0/24 udp * ntp ip filter 400047 pass * 192.168.21.0/24 udp ntp * ip filter 400050 pass * 192.168.31.0/24 icmp * * ip filter 400051 pass * 192.168.31.0/24 established * * ip filter 400052 pass * 192.168.31.0/24 tcp * ident ip filter 400053 pass * 192.168.31.0/24 tcp ftpdata * ip filter 400054 pass * 192.168.31.0/24 tcp,udp * domain ip filter 400055 pass * 192.168.31.0/24 udp domain * ip filter 400056 pass * 192.168.31.0/24 udp * ntp ip filter 400057 pass * 192.168.31.0/24 udp ntp * ip filter 400099 pass * * * * *  ip filter dynamic 400080 * * ftp ip filter dynamic 400081 * * domain ip filter dynamic 400082 * * www ip filter dynamic 400083 * * smtp ip filter dynamic 400084 * * pop3 ip filter dynamic 400085 * * submission ip filter dynamic 400098 * * tcp ip filter dynamic 400099 * * udp  nat descriptor type 20000 masquerade nat descriptor address outer 20000 map-e  # # DNS #  # http://www.rtpro.yamaha.co.jp/RT/docs/ipoe/index.html  # dns host をデフォルトの lan1 のみにすると IPoE 以外の接続が DNS エラーになる # 下記のようにするか、インターフェイスをすべて記述する  dns host lan dns service fallback on dns server pp 1 dns server dhcp onu1 dns server select 500000 dhcp onu1 aaaa . dns server select 500001 pp 1 any . restrict pp 1  dns private address spoof on dns private name setup.netvolante.jp  # # DHCP #  # except use-clientid として、clientid 優先バインドを取り除いている # dhcp scope bind 10 192.168.11.30 ethernet xx:xx:xx:xx:xx:xx などとしても、Roomba の IP が割り当てられないため # 古い Kindle Fire も同様に IP が割り当てられない  dhcp service server dhcp server rfc2131 compliant except remain-silent use-clientid dhcp client release linkdown on  dhcp scope lease type 10 bind-only dhcp scope lease type 20 bind-only dhcp scope lease type 30 bind-only  dhcp scope 10 192.168.11.2-192.168.11.253/24 dhcp scope 20 192.168.21.2-192.168.21.253/24 dhcp scope 30 192.168.31.2-192.168.31.253/24  dhcp scope bind 10 192.168.11.30 xx:xx:xx:xx:xx:xx dhcp scope bind 20 192.168.21.30 xx:xx:xx:xx:xx:xx dhcp scope bind 30 192.168.31.30 xx:xx:xx:xx:xx:xx  # # PHONE #  # https://www.kinryokai.net/modules/news/article.php?storyid=345  analog sip arrive permit 1 myname analog sip call myname 1 sip:xxxxxxxxxx analog sip arrive permit 2 myname analog sip call myname 2 sip:xxxxxxxxxx analog supplementary-service pseudo call-waiting analog extension emergency-call-dial type normal-number analog extension dial prefix sip prefix=\u0026#34;9#\u0026#34; analog extension dial prefix port=1 ngn onu1 analog extension dial prefix port=2 ngn onu1  sip use on sip log on sip codec permit onu1 g711u  # # NTP #  schedule at 1 */Sun 00:00:00 * ntpdate ntp.nict.jp syslog  # # STATISTICS #  statistics cpu on statistics memory on statistics traffic on statistics flow on statistics nat on statistics filter on  # SDカードに保存する  external-memory statistics filename prefix sd1:statistics  # # SYSLOG #  syslog notice on syslog info on syslog debug on  # SDカードに保存する  external-memory syslog filename sd1:syslog.txt limit=10 backup=80 GS308E の設定  DHCP で IP を割り当ててもらうにはトランクポートでは不可  NVR510 側の VLAN 10 を Untagged にする   管理画面へのアクセスも同様にトランクポートからではできない  2F からアクセスできるように GS116v2 側の VLAN 10 を Untagged にする       VLAN ID NVR510 GS116v2 その他     10 U U U   20 T T    30 T T     GS116v2 の設定    VLAN ID GS308E サーバー NAS その他     10 U T  U   20 T T U    30 T T      ","permalink":"http://noynkd.github.io/posts/2022/05/09/%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%AE%E8%A8%98%E9%8C%B2/","summary":"ゴールデンウィーク中にネットワークの構成を変更したので記録しておく ネットワーク構成図 だいたいこんな感じ 線が2本とか3本とかになっているところ","title":"ネットワークの記録"},{"content":"検索機能を付けてみる PaperMod は Fuse.js を使った検索機能がついているらしい\nFeatures - Search Page\nこれをそのまま使ってみる\nnotice を追加してみる hugo-notice というものがあったので追加してみる\n Usage どおりに追加してみる  .notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative} Warning\nThis is a warning notice. Be warned!\n Tip\nThis is a very good tip.\n リスト中に表示させると変になる\n こんな感じ Tip\nThis is a very good tip.    フォントを変更してみる Google Fonts をつかってみる\n PaperMod の拡張用の機能を使用する  ヘッダ拡張として layouts/partials/extend_head.html を作成する CSS 拡張として assets/css/extended/custom.css を作成する   Google Fonts から好きなものを選択して、右上のボタンを押す  Download famiy ではない    Use on the web の文字列をコピーして、作成したファイルにそれぞれの文字列を張り付ける \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.googleapis.com\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.gstatic.com\u0026#34; crossorigin\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=Yomogi\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; body {  font-family: \u0026#39;Yomogi\u0026#39;, cursive; }   ","permalink":"http://noynkd.github.io/posts/2022/05/07/%E3%81%84%E3%82%8D%E3%81%84%E3%82%8D%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B/","summary":"検索機能を付けてみる PaperMod は Fuse.js を使った検索機能がついているらしい Features - Search Page これをそのまま使ってみる notice を追加してみる hugo-notice というものがあったので追加して","title":"いろいろカスタマイズしてみる"},{"content":"きっかけ  GW でひまだった git, github であそぼう！  環境  Windows 10 git version 2.36.0.windows.1 vscode hugo v0.98.0 + extended  手順 だいたいその辺のサイトを調べればわかるとは思うが念のため\n Hugo をインストールする  extended を選択すること SASS/SCSS が使用できるようになる 環境変数にパスを通すことも忘れずに   GitHub で GitHub Pages のリポジトリを作成する  {user-name}.github.io でリポジトリを作成する リポジトリを作成したら Settings \u0026gt; Actions \u0026gt; General \u0026gt; Workflow permissions を Read and write permissions に変更すること  変更しないと GitHub Actions で gh-pages ブランチをプッシュするときにエラーになる ローカルにクローンする   Hugo プロジェクトを作成する  その辺のサイトと逆手順で作ったので、そのままコマンド実行するとフォルダがすでに存在するのでエラーになる むりやり作成 hugo new site . --force    PaperMod をインストールする  PaperMod は Hugo Themes のひとつ なんか人気みたいなので入れてみた\nMethod 2 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod  動作確認 hugo server -t PaperMod    config.yml を修正する  toml はわからん config.yml を作成して config.toml を削除する # https://gohugo.io/getting-started/configuration/ baseURL: http://noynkd.github.io/  languageCode: ja-JP hasCJKLanguage: true timeZone: Asia/Tokyo  title: ざっき theme: PaperMod pagenate: 5  params: homeInfoParams:  title: ざっき  content: なんかあったときにメモする showBreadCrumbs: true showCodeCopyButtons: true hideSummary: false  ignoreFiles: - README.md    gh-pages.yml を作成する  GitHub Actions で動かすときに使う .github/workflows/gh-pages.yml を作成する workflow とかフォルダ名が微妙に違っていてうごかないとかあるあるなので気を付けよう 基本は Hugo のサイトに書かれていること と変わらない name: github pages  on: push:  branches:  - main pull_request:  jobs: deploy:  runs-on: ubuntu-20.04  steps:  - uses: actions/checkout@v2  with:  submodules: true  fetch-depth: 0  - name: Disable quotePath  run: git config core.quotePath false  - name: Setup Hugo  uses: peaceiris/actions-hugo@v2  with:  hugo-version: \u0026#39;latest\u0026#39;  extended: true  - name: Build  run: hugo --minify  - name: Deploy  uses: peaceiris/actions-gh-pages@v3  if: github.ref == \u0026#39;refs/heads/main\u0026#39;  with:  github_token: ${{ secrets.GITHUB_TOKEN }  publish_dir: ./public    main ブランチにプッシュする  GitHub Actions が実行されるはず いい感じにおわったら、いちおう gh-pages ブランチに生成された HTML がプッシュされていることを確認する エラーになったら頑張って対応しよう   GitHub Pages のソースブランチを変更する  リポジトリの Settings \u0026gt; Pages \u0026gt; Source のブランチを gh-pages に変更する  リポジトリの Settings のほかにも、アカウントの Settings にも同じ Pages があるが、そちらはちがう   https://{user-name}.github.io が動作しているか確認する  気になるところ  フォントデカすぎじゃね？  ","permalink":"http://noynkd.github.io/posts/2022/05/06/%E3%83%96%E3%83%AD%E3%82%B0%E3%82%92%E3%81%A4%E3%81%8F%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/","summary":"きっかけ GW でひまだった git, github であそぼう！ 環境 Windows 10 git version 2.36.0.windows.1 vscode hugo v0.98.0 + extended 手順 だいたいその辺のサイトを調べればわかるとは思うが念のため Hugo をインストールす","title":"ブログをつくってみる"}]